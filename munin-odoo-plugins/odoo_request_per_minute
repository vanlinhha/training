#!/usr/bin/env python
from datetime import datetime
import re
import os
from munin import MuninPlugin

CONST_TIME_FORMAT = "%Y-%m-%d %H:%M:%S"
# Monitor module
MODULE = "hr.job"          # ex: res.partner
# Read time response/request before 5 minute
DELAY_MINUTE = 5


class OdooNumberRequest(MuninPlugin):
    title = "Number request per minute"
    args = "--base 1000 -l 0"
    vlabel = "number_request"
    scale = False
    category = "odoo"

    @property
    def fields(self):
        # warning = os.environ.get('time_warn', 10)
        # critical = os.environ.get('time_crit', 120)
        return [("number_request", dict(
                label="Number request",
                info=' Number request to module.',
                type="GAUGE",
                min="0",
                # warning=str(warning),
                # critical=str(critical)
                ))]

    def execute(self):
        check = False
        count = 0.0
        if os.path.exists("/opt/odoo/odoo-10.0/odoo.log"):
            check = True
        if check:
            # res = re.compile("odoo\.http\.rpc\.response")
            req = re.compile("odoo\.http\.rpc\.request")
            mod = re.compile(MODULE)
            file_lines = open("/opt/odoo/odoo-10.0/odoo.log", "r")
            log_lines = []
            for file_line in file_lines:
                if (req.search(file_line) > -1) and mod.search(file_line):
                    log_lines.append(file_line)
            log_lines.reverse()
            for log_line in log_lines:
                time_line = log_line.strip(' ').split(',')
                if len(time_line) >= 2:
                    delay = datetime.now() - datetime.strptime(time_line[0], CONST_TIME_FORMAT)
                    if delay.seconds > DELAY_MINUTE * 60:      # check from end file until 5 minute before
                        print delay.seconds
                        print "break"
                        break
                    else:
                        print log_line
                        count += 1

            """
                :param number_request is number request per minute  
            """
            return dict(number_request=count/DELAY_MINUTE)
        else:
            return dict(number_request=count/DELAY_MINUTE)

if __name__ == "__main__":
    OdooNumberRequest().run()
